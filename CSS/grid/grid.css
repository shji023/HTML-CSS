/*grid layout 기본 개념 : 2차원*/

.container {
  border: 5px dashed darksalmon;
  width: 400px;
  height: 400px;
  display: grid;
  grid-template-columns: 100px 150px 100px;
  grid-template-columns: 1fr 1fr 1fr; /*1:1:1 비율*/
  grid-template-columns: repeat(4, 1fr); /*반복*/
  grid-template-rows: 100px 100px;
}
.item {
  background-color: darkseagreen;
  border: 3px solid tomato;
  font-size: 30px;
}

.grid {
  border: 5px dashed darksalmon;
  width: 400px;
  height: 400px;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-template-areas:
    "hd hd hd hd hd"
    "ma ma ma sb sb"
    "ft ft ft ft ft";
}
.area {
  background-color: darkseagreen;
  border: 3px solid tomato;
  font-size: 30px;
}
.header {
  grid-area: hd;
}
.main {
  grid-area: ma;
}
.sidebar {
  grid-area: sb;
}
.footer {
  grid-area: ft;
}

.row {
  border: 5px dashed darksalmon;
  width: 400px;
  height: 400px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(3, 1fr);
  row-gap: 20px;
  column-gap: 50px;
  gap: 20px 50px; /*단축 속성*/

  /*템플릿을 넘쳐나는 아이템을 설정해주고 싶을 때*/
  grid-auto-rows: 100px; /*넘친 아이템의 행 크기를 명시해줌*/
  grid-auto-columns: 100px; /*넘친 아이템의 열 크기를 명시해줌*/

  /*아이템이 어떤 방향으로 흐를지 결정*/
  grid-auto-flow: column; /*열 축의 방향으로 흐름*/
  grid-auto-flow: row dense; /*dense 추가 시 2번 아이템이 들어갈 자리가 없어 밑으로 내려갔지만 
  그 자리를 다른 아이템이 빽빽히 채움*/

  /*grid shorthand
  아이템이 어디로 자리할 지 명시적으로 작성 : grid-template
  흐름,눈에 안보이는 아이템 등 암시적인 속성 : gird-auto 
  grid : row/column
  grid : 명시/명시
  grid : 명시/암시
  grid : 암시/명시
  */
  grid: lfr 2fr / auto-flow 100px 200px; /*row명시적, column명시적 작성 후 열 축 방향으로 흐르게함*/
}
.gap {
  background-color: darkseagreen;
  border: 3px solid tomato;
  font-size: 30px;
}
.gap:nth-child(2) {
  grid-column: span 3;
}

/*아이템 이외에 container안에 빈 영역이 존재하는 상태*/
.justify {
  border: 5px dashed darksalmon;
  width: 100%;
  height: 500px;
  display: grid;
  grid-template-columns: repeat(
    3,
    100px
  ); /*grid-template-columns: repeat(3, 1fr); - items 예제*/
  grid-template-rows: repeat(3, 100px); /*grid-template-rows: repeat(3, 1fr);*/

  /*메인축*/
  justify-content: start; /*end, center, space-around, space-between*/
  /*교차축*/
  align-content: start; /*end, center, space-around, space-between*/
  /*한 틀 안에서 각각의 아이템 위치*/
  justify-items: stretch; /*해당 공간 안에서 꽉참 주축 중심*/
  align-items: stretch; /*해당 공간 안에서 꽉참 교차축 중심*/
}
.content {
  background-color: darkseagreen;
  border: 3px solid tomato;
  font-size: 30px;
  /*width: 100%;
  height: 100%;
  */
}
.content:nth-child(1) {
  width: 30px;
  height: 30px;
}
.content:nth-child(3) {
  justify-self: end; /*해당 공간안에서 메인축 끝나는 부분에 붙음 */
}

.grid-row {
  border: 5px dashed chartreuse;
  display: grid;
  grid-template-rows: repeat(3, 100px);
  grid-template-columns: repeat(3, 1fr);
  grid-template-columns: min-content 1fr 1fr; /*min-content 가장 단어가 그 박스의 너비.
   그 가장 긴단어 때문에 더이상 줄어들 수 없을 때까지 줄어듬*/
  grid-template-columns: max-content 1fr 1fr; /*max-content 단어가 아니라 문장의 길이만큼도 늘일 수 있음*/
  grid-template-columns: repeat(
    auto-fill,
    minmax(100px, 1fr)
  ); /*auto-fill : column 의 개수를 유연하게 할 수 있음, minmax(min, max)*/
  grid-template-columns: repeat(
    auto-fit,
    minmax(100px, 1fr)
  ); /*auto-fill은 남는공간이 생김 하지만 auto-fit은 남는공간없이 꽉 채움*/
}
.box {
  background-color: palevioletred;
  border: 3px solid red;
  font-size: 21;
}
.box:first-child {
  background-color: powderblue;

  grid-row-start: 1; /*몇번째 선인지를 의미 가장 바깥테두리가 1번선*/
  grid-row-end: 4; /*4번째 선까지 설정할 경우 3칸이 채워짐, -1로 작성했을 때와 동일*/
  /*shorthand
  grid-row: 1/-1
  grid-row: 1/ span 2 -> 1부터 2칸
  grid-column 도 동일
  */
  grid-row: 4 / span 2;
  grid-column: 2 / -1;
  grid-area: 4 / 2 / span 2 /-1; /*위에 두개 작성한것과 동일. 
  이렇게 사용하는것은 gird-template-areas에서 사용한 grid-area와 다름*/
  z-index: 2; /*가장앞에 나와있음*/
}
.box:nth-child(3) {
  order: -1; /*3번째 박스 맨앞으로*/
}
