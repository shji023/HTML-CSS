/*기본 값 main axis : 왼->오, cross axis : 위->아래
display - container에서 써야함
display: block, inline-block (바깥쪽)
display: flex, grid(안쪽)
*/
.container {
  height: 500px;
  border: 3px dashed lightcoral;
  display: inline-block; /*가로정렬 하지만 여백 생김*/
  display: flex; /*알맞은 가로정렬*/
  flex-direction: column; /*기본 row
  column-reverse : 아래->위, row-reverse: 오->왼
  */
  flex-wrap: nowrap; /*크기를 줄이면 컨테이너 내부의 아이템들이 자신의 너비를 줄임, wrap : 자신의 너비를 지킴*/
  flex-flow: column wrap; /*위 두개 한꺼번에 작성한것과 동일*/
}

.item {
  width: 100px;
  height: 100px;
  background-color: lightgreen;
  border: 3px solid lightseagreen;

  flex-grow: 1; /*뷰 너비를 늘이면 자동적으로 각각 똑같이 늘어나서 빈공간이 없게*/
}

/*order 속성 사용하려면 container에 display: flex 선언 되어 있어야함*/
.item:nth-child(3) {
  order: -1; /*3번이 제일 앞으로*/
}
.item:nth-child(5) {
  order: 8; /*5번이 제일 뒤로*/
}

.item:nth-child(2) {
  flex-grow: 2; /*남은 조각 중에서 2개는 2번에게*/
}
.item:nth-child(4) {
  flex-grow: 1; /*남은 조각 중에서 1개는 4번에게*/
}

.item:nth-child(1) {
  flex-shrink: 0; /*더이상 줄어들지 않겠다. flex-shrink 기본값 1*/
}
.item:nth-child(6) {
  flex-shrink: 2; /*기본으로 줄어들어야하는 것보다 두배로 빨리 줄어듬*/
}

.basis {
  height: 200px;
  border: 3px dashed hotpink;
  display: flex; /*알맞은 가로정렬*/
}
.flex {
  height: 50px;
  margin: 5px;
  background-color: indigo;
  border: 3px solid black;
  font-size: 30px;

  flex-grow: 1; /*기본적으로 차지하고 있던 content의 사이즈가 다를 경우 
  flex-grow를 사용해도 동일한 너비를 가지지 않음. 늘어난 영역이 1:1:1일뿐*/
  flex-basis: 100px; /*기본적으로 차지하고 있던 content의 사이즈를 동알하게 만듬*/
}
/*flex shorthand 기본값 flex-grow:0, flex-shrink:1, flex-basis:auto
  값이 하나일 때
number -> flex-grow
length, percentage -> flex-basis
주의 : 한 개 또는 두개의 단위 없는 숫자 값을 사용할 때, flex-basis의 값은 auto가 아니라 0.
  값이 두개일 때
flex: 숫자, 숫자 -> grow, shrink
flex: 숫자, (len or percentage) -> grow, basis
  값이 세개일 때
flex : flex-grow, flex-shrink, flex-basis
  initial
flex: 0 1 auto
  auto
flex: 1 1 auto
  none
flex: 0 0 auto
*/

.justify {
  border: 5px dashed peachpuff;
  display: flex;
  /*메인축*/
  justify-content: flex-start; /*주축이 시작하는 위치에 정렬*/
  justify-content: flex-end; /*주축이 끝나는 위치에 정렬*/
  justify-content: center; /*주축 기준 가운데 정렬*/
  justify-content: space-between; /*사이에 공간을 두고 꽉 채움*/
  justify-content: space-around; /*사이에 공간을 두고, 양 끝 여백을 두고 채움*/
  /*한줄일 때 교차축 정렬*/
  align-items: flex-start; /*교차축의 시작 부분부터*/
  align-items: flex-end; /*교차축의 끝 부분부터*/
  align-items: center; /*교차축 기준 가운데 정렬*/
  /*여러 줄일 때 교차축 정렬*/
  align-content: flex-start; /*교차축의 시작 부분부터*/
  align-content: flex-end; /*교차축의 끝 부분부터*/
  align-content: center; /*교차축 기준 가운데 정렬*/
  align-content: space-between; /*사이에 공간을 두고 꽉 채움*/
  align-content: space-around; /*사이에 공간을 두고, 양 끝 여백을 두고 채움*/
}
.content {
  width: 50px;
  height: 50px;
  margin: 5px;
  background-color: plum;
  border: 3px solid blueviolet;
  font-size: 30px;
}
.content:nth-child(3) {
  align-self: flex-start; /*아이템 한개만 변경 가능, stretch*/
}
